import ast
import asyncio
import os
from mistralai import Mistral
import json

api_key = "4nLSiw4wE9hV3zju2lSKl7yF0FhOLjb9"


client = Mistral(api_key=api_key)
promt = ""


def clean_json_string(json_string):
    start_index = json_string.find("{")
    end_index = json_string.rfind("}")
    print("SEND 1")
    print(json_string)
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –æ–±–∞ –∏–Ω–¥–µ–∫—Å–∞ –Ω–∞–π–¥–µ–Ω—ã
    if start_index == -1 or end_index == -1:
        return "False"

    # –û–±—Ä–µ–∑–∫–∞ —Å—Ç—Ä–æ–∫–∏ –¥–æ –Ω–∞—á–∞–ª–∞ –∏ –ø–æ—Å–ª–µ –∫–æ–Ω—Ü–∞ JSON-–æ–±—ä–µ–∫—Ç–∞
    cleaned_string = json_string[start_index : end_index + 1]
    print("SEND 2")
    print(cleaned_string)
    return cleaned_string


def string_to_dict(json_string):
    try:
        # –û—á–∏—Å—Ç–∫–∞ —Å—Ç—Ä–æ–∫–∏
        cleaned_json_string = clean_json_string(json_string)
        if cleaned_json_string == "False":
            return "False"
        # –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ —Å—Ç—Ä–æ–∫–∏ –≤ —Å–ª–æ–≤–∞—Ä—å
        data = json.loads(cleaned_json_string)
        return data
    except json.JSONDecodeError as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è JSON: {e}")
    except ValueError as e:
        print(f"–û—à–∏–±–∫–∞: {e}")


mes = (
    "üéà** **#SNX** **/USDT** - SHORT"
    "üü¢ –û—Ç–∫—Ä—ã—Ç–∏–µ - 1.419"
    "‚úÖ –¶–µ–ª–∏ - 1.395, 1.376, 1.355"
    "‚ôæ - –ü–ª–µ—á–æ - —Ö20(Cross)"
    " üî¥ –°—Ç–æ–ø - 1.497"
    "**‚û°Ô∏è****–†–µ–∫–æ–º–µ–Ω–¥—É—é –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è —Ç–æ—Ä–≥–æ–≤–ª–∏ - ****BITGET** | **MEXC**"
    "(—Å–∫–∏–¥–∫–∏ –Ω–∞ –∫–æ–º–∏—Å—Å–∏–∏, –±–æ–Ω—É—Å—ã –¥–æ 5000$, –∞–∫—Ü–∏–∏, —Ä–æ–∑—ã–≥—Ä—ã—à–∏, —Ä–∞–∑–¥–∞—á–∏)"
    "__–î–∞–π—Ç–µ —Ä–µ–∞–∫—Ü–∏–π __****‚ù§Ô∏è****üëç****üî•**"
)


def AI(mess):
    chat_response = client.agents.complete(
        agent_id="ag:55c24037:20240929:untitled-agent:472eca29",
        messages=[
            {
                "role": "user",
                "content": f"{mess}",
            },
        ],
    )

    resp = chat_response.choices[0].message.content
    data = string_to_dict(resp)
    return data
